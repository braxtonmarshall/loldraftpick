# Generated by Django 3.1.1 on 2020-09-12 23:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SmallIntegerField(unique=True)),
                ('champ_id', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=15)),
                ('img', models.FilePathField(path='/home/mars/Workspace/Python/Loldraft.gg/draftapp/static/img')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('platform_id', models.CharField(choices=[('BR1', 'Brazil'), ('EUN1', 'Europe North'), ('EUW1', 'Europe West'), ('JP1', 'Japan'), ('KR', 'Kr'), ('LA1', 'Latin America One'), ('LA2', 'Latin America Two'), ('NA1', 'North America'), ('OC1', 'Oceanic'), ('TR1', 'Turkey'), ('RU', 'Russia')], max_length=4)),
                ('game_creation', models.DateTimeField()),
                ('queue_id', models.PositiveSmallIntegerField(choices=[(400, 'Normal Draft Pick 5V5'), (420, 'Ranked Solo 5V5'), (440, 'Ranked Flex 5V5'), (450, 'Aram 5V5')])),
                ('season', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(13), django.core.validators.MinValueValidator(1)])),
                ('average_rank', models.CharField(choices=[('CHR', 'Challenger'), ('GMR', 'Grandmaster'), ('MR', 'Master'), ('DMD', 'Diamond'), ('PLAT', 'Platinum'), ('GLD', 'Gold'), ('SVR', 'Silver'), ('BRZ', 'Bronze'), ('IRON', 'Iron')], max_length=4)),
                ('average_tier', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('', '')], max_length=3, null=True)),
                ('total_time', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('pick_turn', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('role', models.CharField(choices=[('DUO', 'Duo'), ('NONE', 'None'), ('SOLO', 'Solo'), ('CARRY', 'Duo Carry'), ('SUPPORT', 'Duo Support')], max_length=11)),
                ('lane', models.CharField(choices=[('TOP', 'Top'), ('JG', 'Jungle'), ('MID', 'Middle'), ('BOT', 'Bottom')], max_length=6)),
                ('rank', models.CharField(choices=[('CHR', 'Challenger'), ('GMR', 'Grandmaster'), ('MR', 'Master'), ('DMD', 'Diamond'), ('PLAT', 'Platinum'), ('GLD', 'Gold'), ('SVR', 'Silver'), ('BRZ', 'Bronze'), ('IRON', 'Iron')], max_length=4)),
                ('tier', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('', '')], max_length=3, null=True)),
                ('level', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(18), django.core.validators.MinValueValidator(1)])),
                ('kills', models.PositiveSmallIntegerField()),
                ('deaths', models.PositiveSmallIntegerField()),
                ('assists', models.PositiveSmallIntegerField()),
                ('minions_killed', models.PositiveSmallIntegerField()),
                ('ban_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='related_ban', to='draftapp.champion', to_field='key')),
            ],
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('summoner_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('acc_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=16)),
                ('platform_id', models.CharField(choices=[('BR1', 'Brazil'), ('EUN1', 'Europe North'), ('EUW1', 'Europe West'), ('JP1', 'Japan'), ('KR', 'Kr'), ('LA1', 'Latin America One'), ('LA2', 'Latin America Two'), ('NA1', 'North America'), ('OC1', 'Oceanic'), ('TR1', 'Turkey'), ('RU', 'Russia')], max_length=4)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_matches', models.PositiveSmallIntegerField()),
                ('rank', models.CharField(choices=[('CHR', 'Challenger'), ('GMR', 'Grandmaster'), ('MR', 'Master'), ('DMD', 'Diamond'), ('PLAT', 'Platinum'), ('GLD', 'Gold'), ('SVR', 'Silver'), ('BRZ', 'Bronze'), ('IRON', 'Iron')], max_length=4)),
                ('tier', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('', '')], max_length=3, null=True)),
                ('league_points', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='SummonerItem',
            fields=[
                ('key', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('description', models.TextField()),
                ('plaintext', models.TextField()),
                ('base_cost', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(4000)])),
                ('total_cost', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(0), django.core.validators.MinValueValidator(4000)])),
                ('img', models.FilePathField(path='/home/mars/Workspace/Python/Loldraft.gg/draftapp/static/img')),
            ],
        ),
        migrations.CreateModel(
            name='SummonerRune',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('img', models.FilePathField(path='/home/mars/Workspace/Python/Loldraft.gg/draftapp/static/img')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SummonerSpell',
            fields=[
                ('key', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=22, unique=True)),
                ('name', models.CharField(max_length=12, unique=True)),
                ('description', models.TextField()),
                ('img', models.FilePathField(path='/home/mars/Workspace/Python/Loldraft.gg/draftapp/static/img')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('side', models.PositiveSmallIntegerField(choices=[(100, 'Blue'), (200, 'Red')])),
                ('win_or_lose', models.CharField(max_length=4)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='draftapp.match')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantSummonerSpell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='draftapp.participant')),
                ('summoner_spell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='draftapp.summonerspell')),
            ],
            options={
                'unique_together': {('participant', 'summoner_spell')},
            },
        ),
        migrations.CreateModel(
            name='ParticipantSummonerItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(6)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='draftapp.summoneritem')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='draftapp.participant')),
            ],
            options={
                'unique_together': {('participant', 'item', 'amount')},
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='items',
            field=models.ManyToManyField(through='draftapp.ParticipantSummonerItems', to='draftapp.SummonerItem'),
        ),
        migrations.AddField(
            model_name='participant',
            name='pick_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_pick', to='draftapp.champion', to_field='key'),
        ),
        migrations.AddField(
            model_name='participant',
            name='primary_rune',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primary_rune', to='draftapp.summonerrune'),
        ),
        migrations.AddField(
            model_name='participant',
            name='secondary_rune',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='secondary_rune', to='draftapp.summonerrune'),
        ),
        migrations.AddField(
            model_name='participant',
            name='spells',
            field=models.ManyToManyField(through='draftapp.ParticipantSummonerSpell', to='draftapp.SummonerSpell'),
        ),
        migrations.AddField(
            model_name='participant',
            name='summoner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='draftapp.summoner'),
        ),
        migrations.AddField(
            model_name='participant',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='draftapp.team'),
        ),
    ]
